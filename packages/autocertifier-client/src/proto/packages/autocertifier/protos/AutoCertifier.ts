// @generated by protobuf-ts 2.9.1 with parameter server_generic,generate_dependencies,long_type_number
// @generated from protobuf file "packages/autocertifier/protos/AutoCertifier.proto" (package "autocertifier", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message autocertifier.SessionIdRequest
 */
export interface SessionIdRequest {
    /**
     * @generated from protobuf field: string sessionId = 1;
     */
    sessionId: string;
}
/**
 * @generated from protobuf message autocertifier.SessionIdResponse
 */
export interface SessionIdResponse {
    /**
     * @generated from protobuf field: optional string error = 1;
     */
    error?: string;
    /**
     * @generated from protobuf field: optional string sessionId = 2;
     */
    sessionId?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class SessionIdRequest$Type extends MessageType<SessionIdRequest> {
    constructor() {
        super("autocertifier.SessionIdRequest", [
            { no: 1, name: "sessionId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message autocertifier.SessionIdRequest
 */
export const SessionIdRequest = new SessionIdRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SessionIdResponse$Type extends MessageType<SessionIdResponse> {
    constructor() {
        super("autocertifier.SessionIdResponse", [
            { no: 1, name: "error", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "sessionId", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message autocertifier.SessionIdResponse
 */
export const SessionIdResponse = new SessionIdResponse$Type();
/**
 * @generated ServiceType for protobuf service autocertifier.AutoCertifierService
 */
export const AutoCertifierService = new ServiceType("autocertifier.AutoCertifierService", [
    { name: "getSessionId", options: {}, I: SessionIdRequest, O: SessionIdResponse }
]);
